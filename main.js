/* A web application that fetches data from TMDB API. The user can use different buttons to get top rated,
popular and top rated horror movies. The user can also search for movies and persons in the search bar and you 
can click on a movie to get more information about it.

I used AI (chatGPT) to generate code for most of the project but I had to make a lot of changes to make it work.
I also used it to help get the endpoints for all the different features and to help me with the error handling.
Most of the css is generated by AI, to save time, but I had to make some changes.
I used AI to help me with the README file as well because I was not sure what to write since I had never done it before. */

import { fetchContent, searchContent } from "./js/api.js";
import {
  displayTopMovies,
  displaySearchMovies,
  displaySearchPersons,
  displayErrorMessage,
  getRadioInputValue,
} from "./js/ui.js";

const topRatedBtn = document.querySelector("#top-rated-btn");
const popularBtn = document.querySelector("#popular-btn");
const horrorBtn = document.querySelector("#horror-btn");
const form = document.querySelector("form");
const searchInput = document.querySelector("#search-input");
const content = document.querySelector("#content");

topRatedBtn.addEventListener("click", () => loadTopMovies("top_rated"));
popularBtn.addEventListener("click", () => loadTopMovies("popular"));
horrorBtn.addEventListener("click", () => loadTopMovies("horror"));
form.addEventListener("submit", (event) => {
  event.preventDefault();
  loadSearchContent();
});

async function loadTopMovies(type) {
  content.classList = "";
  let url = `/movie/${type}`;
  if (type === "horror") {
    url =
      "/discover/movie?with_genres=27&sort_by=vote_average.desc&vote_count.gte=100";
  }
  try {
    const data = await fetchContent(url);
    displayTopMovies(data.results.slice(0, 10), content);
  } catch (error) {
    displayErrorMessage(error, content);
  }
}

async function loadSearchContent() {
  const radioInputValue = getRadioInputValue("search_type");
  const query = searchInput.value.trim();
  if (!query) {
    displayErrorMessage("Please enter a search query.", content);
    return;
  }

  try {
    const data = await searchContent(query, radioInputValue);
    if (radioInputValue === "movie") {
      displaySearchMovies(data.results, content);
    } else if (radioInputValue === "person") {
      displaySearchPersons(data.results, content);
    }
  } catch (error) {
    console.log("error", error);
    displayErrorMessage(error, content);
  }
}
